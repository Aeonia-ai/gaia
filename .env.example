# Gaia Platform Configuration
# Copy this file to .env and update with your values

# ====================================================================
# CORE AUTHENTICATION (Required)
# ====================================================================

# User-Associated API Key for Development
# For local Docker: FJUeDkZRy0uPp7cYtavMsIfwi7weF9-RT7BeOlusqnE (dev@gaia.local)
# For cloud: Generated during database initialization (admin@gaia.dev)
API_KEY=YOUR_USER_ASSOCIATED_API_KEY_HERE

# Supabase Configuration (Required for JWT authentication)
SUPABASE_URL=YOUR_SUPABASE_URL_HERE
SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY_HERE
SUPABASE_JWT_SECRET=YOUR_SUPABASE_JWT_SECRET_HERE

# ====================================================================
# LLM API CONFIGURATION
# ====================================================================

# LLM API Keys for chat service
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
ANTHROPIC_API_KEY=YOUR_ANTHROPIC_API_KEY_HERE

# ====================================================================
# DATABASE CONFIGURATION
# ====================================================================

# PostgreSQL Database (Compatible with LLM Platform schema)
DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
DATABASE_ECHO=false
DATABASE_POOL_SIZE=5
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# ====================================================================
# MICROSERVICES CONFIGURATION
# ====================================================================

# NATS Message Broker
NATS_URL=nats://nats:4222
NATS_TIMEOUT=5.0
NATS_MAX_RECONNECT_ATTEMPTS=10

# Service URLs (for inter-service communication)
AUTH_SERVICE_URL=http://auth-service:8000
ASSET_SERVICE_URL=http://asset-service:8000
CHAT_SERVICE_URL=http://chat-service:8000
GATEWAY_URL=http://gateway:8000

# Service Configuration
SERVICE_HOST=0.0.0.0
SERVICE_PORT=8000
ENVIRONMENT=development
DEBUG=false

# ====================================================================
# RATE LIMITING & SECURITY
# ====================================================================

# Rate Limiting Configuration
RATE_LIMIT_REQUESTS=60
RATE_LIMIT_PERIOD=minute

# CORS Configuration - Add your frontend domains
ALLOWED_ORIGINS=http://localhost:8666,http://localhost:3000,http://localhost:5173,http://localhost:8081,https://yourdomain.com

# Request Timeouts
INTER_SERVICE_REQUEST_TIMEOUT=30.0
CLIENT_REQUEST_TIMEOUT=60.0
GATEWAY_REQUEST_TIMEOUT=30.0
GATEWAY_MAX_RETRIES=2
GATEWAY_RETRY_DELAY=1.0

# ====================================================================
# UNIVERSAL ASSET SERVER CONFIGURATION
# ====================================================================

# External Asset Generation API Keys
OPENAI_API_KEY=YOUR_OPENAI_API_KEY_HERE
FREESOUND_API_KEY=YOUR_FREESOUND_API_KEY_HERE
MESHY_API_KEY=YOUR_MESHY_API_KEY_HERE
MIDJOURNEY_API_KEY=YOUR_MIDJOURNEY_API_KEY_HERE
MUBERT_API_KEY=YOUR_MUBERT_API_KEY_HERE
STABILITY_API_KEY=YOUR_STABILITY_API_KEY_HERE

# ====================================================================
# REDIS CONFIGURATION
# ====================================================================

# Redis Configuration (for caching and rate limiting)
REDIS_URL=redis://redis:6379
REDIS_PASSWORD=redis_password

# Cache Settings
AUTH_CACHE_TTL=900         # JWT cache TTL in seconds (15 minutes)
API_KEY_CACHE_TTL=600      # API key cache TTL in seconds (10 minutes)
SERVICE_HEALTH_CACHE_TTL=60 # Service health cache TTL in seconds (1 minute)

# Asset Storage Configuration
ASSET_STORAGE_BUCKET=assets
MAX_ASSET_FILE_SIZE_MB=100
MAX_PREVIEW_IMAGE_SIZE_MB=10

# Cost Optimization Parameters
MAX_GENERATION_COST_PER_ASSET=0.50
DEFAULT_CACHE_TTL_SECONDS=3600
MAX_CONCURRENT_GENERATIONS=5

# Performance Settings
ASSET_SEARCH_LIMIT_DEFAULT=20
ASSET_SEARCH_LIMIT_MAX=100
SEMANTIC_SEARCH_SIMILARITY_THRESHOLD=0.7

# ====================================================================
# MCP (Model Context Protocol) CONFIGURATION
# ====================================================================

# MCP Filesystem Root (for chat service filesystem endpoints)
MCP_FILESYSTEM_ROOT=/app/data

# ====================================================================
# LOGGING CONFIGURATION
# ====================================================================

# Logging Level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ====================================================================
# HEALTH MONITORING
# ====================================================================

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=5.0
SERVICE_REGISTRY_ENABLED=true
SERVICE_HEARTBEAT_INTERVAL=15

# ====================================================================
# PERFORMANCE & SCALING
# ====================================================================

# Performance Configuration
MAX_CONCURRENT_REQUESTS=100
WORKER_POOL_SIZE=4

# ====================================================================
# GOOGLE CLOUD STORAGE (Optional - for asset storage)
# ====================================================================

# Google Cloud Storage Configuration
GCS_BUCKET_NAME=your-bucket-name
GCS_PROJECT_ID=your-project-id

# Service Account Keys Configuration (Development)
# Production should use workload identity
GOOGLE_APPLICATION_CREDENTIALS=~/keys/gcp/gaia-platform/backend-service-sa-key.json
GCS_STORAGE_CREDENTIALS=~/keys/gcp/gaia-platform/gcs-storage-sa-key.json

# ====================================================================
# DEVELOPMENT & TESTING
# ====================================================================

# Test Configuration
GATEWAY_URL=http://gateway:8000

# Security Notes:
# 1. Never commit .env files to the repository
# 2. Ensure service account keys have 600 permissions (chmod 600)
# 3. Key directories should have 700 permissions (chmod 700)
# 4. In production, use Cloud Run's workload identity instead of key files
# 5. Generate strong, unique API keys for each environment
