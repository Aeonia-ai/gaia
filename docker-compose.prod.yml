version: '3.8'

services:
  # FastAPI Gateway - Main entry point for all client requests
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8666:8000"  # Same port as LLM Platform for client compatibility
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8000
      - ASSET_SERVICE_URL=http://asset-service:8000
      - CHAT_SERVICE_URL=http://chat-service:8000
      - KB_SERVICE_URL=http://kb-service:8000
      - TLS_CERT_PATH=/app/certs/gateway/cert.pem
      - TLS_KEY_PATH=/app/certs/gateway/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
      - auth-service
      - asset-service
      - chat-service
      - kb-service
    networks:
      - gaia_net
    command: uvicorn app.gateway.main:app --host 0.0.0.0 --port 8000
    # Production resource limits
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.8
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - TLS_CERT_PATH=/app/certs/auth-service/cert.pem
      - TLS_KEY_PATH=/app/certs/auth-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.auth.main:app --host 0.0.0.0 --port 8000
    # Production resource limits
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.8
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Asset Service (Universal Asset Server)
  asset-service:
    build:
      context: .
      dockerfile: Dockerfile.asset
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - TLS_CERT_PATH=/app/certs/asset-service/cert.pem
      - TLS_KEY_PATH=/app/certs/asset-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.asset.main:app --host 0.0.0.0 --port 8000
    # Production resource limits
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.8
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chat Service (MCP-Agent powered with KB integration)
  chat-service:
    build:
      context: .
      dockerfile: Dockerfile.chat
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - MCP_FILESYSTEM_ROOT=/app/data
      - TLS_CERT_PATH=/app/certs/chat-service/cert.pem
      - TLS_KEY_PATH=/app/certs/chat-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.chat.main:app --host 0.0.0.0 --port 8000
    # Production resource limits - highest for MCP + AI processing
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 1.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # KB Service (Knowledge Base integration)
  kb-service:
    build:
      context: .
      dockerfile: Dockerfile.kb
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      # KB configuration
      - KB_PATH=/kb
      - KB_MCP_ENABLED=true
      - KB_MODE=production
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.kb.main:app --host 0.0.0.0 --port 8000
    # Production resource limits
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 1.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Service (FastHTML UI)
  web-service:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8080:8000"  # Web UI on port 8080
    env_file:
      - .env
    environment:
      - GATEWAY_URL=http://gateway:8000
      - NATS_URL=nats://nats:4222
      - WEB_SESSION_SECRET=${SESSION_SECRET:-change-this-in-production}
      - WEB_LOG_LEVEL=INFO
      - WEB_DEBUG=false
      - ENVIRONMENT=production
      - WEB_SERVICE_BASE_URL=${WEB_SERVICE_BASE_URL:-http://localhost:8080}
      - TLS_CERT_PATH=/app/certs/web-service/cert.pem
      - TLS_KEY_PATH=/app/certs/web-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - gateway
      - nats
    networks:
      - gaia_net
    command: uvicorn app.services.web.main:app --host 0.0.0.0 --port 8000
    # Production resource limits - lightweight UI
    mem_limit: 128m
    mem_reservation: 64m
    cpus: 0.5
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database (with Gaia Platform schema)
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-local-database.sql:/docker-entrypoint-initdb.d/init-gaia.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=llm_platform
    ports:
      - "5432:5432"
    networks:
      - gaia_net
    # Production resource limits - database needs more resources
    mem_limit: 1g
    mem_reservation: 512m
    cpus: 1.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NATS Message Broker
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    networks:
      - gaia_net
    command: ["--jetstream", "--http_port", "8222"]
    # Production resource limits
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.5
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gaia_net
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    # Production resource limits
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.5
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  gaia_net:
    driver: bridge