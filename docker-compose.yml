services:
  # FastAPI Gateway - Main entry point for all client requests
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8666:8000"  # Same port as LLM Platform for client compatibility
    volumes:
      - ./app:/app/app
      - mcp_data:/app/data/kb
      - ../Dendron:/app/data/wiki
      - ./certs:/app/certs:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8000
      - ASSET_SERVICE_URL=http://asset-service:8000
      - CHAT_SERVICE_URL=http://chat-service:8000
      - KB_SERVICE_URL=http://kb-service:8000
      - TLS_CERT_PATH=/app/certs/gateway/cert.pem
      - TLS_KEY_PATH=/app/certs/gateway/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
      - auth-service
      - asset-service
      - chat-service
      - kb-service
    networks:
      - gaia_net
    command: uvicorn app.gateway.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits - generous for comfort
    mem_limit: 512m
    cpus: 1.0

  # Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth
    volumes:
      - ./app:/app/app
      - ./certs:/app/certs:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - TLS_CERT_PATH=/app/certs/auth-service/cert.pem
      - TLS_KEY_PATH=/app/certs/auth-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.auth.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits
    mem_limit: 256m
    cpus: 0.8

  # Asset Service (Universal Asset Server)
  asset-service:
    build:
      context: .
      dockerfile: Dockerfile.asset
    volumes:
      - ./app:/app/app
      - ./certs:/app/certs:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - TLS_CERT_PATH=/app/certs/asset-service/cert.pem
      - TLS_KEY_PATH=/app/certs/asset-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.asset.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits
    mem_limit: 256m
    cpus: 0.8

  # Chat Service (MCP-Agent powered with KB integration)
  chat-service:
    build:
      context: .
      dockerfile: Dockerfile.chat
    volumes:
      - ./app:/app/app
      - mcp_data:/app/data/kb
      - ./certs:/app/certs:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - MCP_FILESYSTEM_ROOT=/app/data
      - TLS_CERT_PATH=/app/certs/chat-service/cert.pem
      - TLS_KEY_PATH=/app/certs/chat-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
      - WATCHFILES_FORCE_POLLING=true
    depends_on:
      - db
      - nats
      - redis
    ports:
      - "8002:8000"  # Expose chat service for persona management
    networks:
      - gaia_net
    command: uvicorn app.services.chat.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits - highest for MCP + AI
    mem_limit: 512m
    cpus: 1.0

  # KB Service (Knowledge Base integration - Game Content)
  kb-service:
    build:
      context: .
      dockerfile: Dockerfile.kb
    volumes:
      - ./app:/app/app
      # NO local KB mount - container-only storage for local-remote parity
      # KB will clone from Git on every start, just like production
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      # KB configuration
      - KB_PATH=/kb
      - KB_MCP_ENABLED=true
      - KB_MODE=local
      - KB_MULTI_USER_ENABLED=false  # Disable for semantic search testing
    ports:
      - "8001:8000"  # Expose KB service for testing (avoid conflict with local services)
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.kb.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits
    mem_limit: 512m
    cpus: 1.0

  # KB Docs Service (Documentation KB - Obsidian Vault direct mount)
  kb-docs:
    build:
      context: .
      dockerfile: Dockerfile.kb
    volumes:
      - ./app:/app/app
      - ../../Vaults:/vaults:rw  # Direct filesystem mount for instant updates
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      # KB configuration for documentation
      - KB_PATH=/vaults/KB
      - KB_STORAGE_MODE=filesystem
      - KB_GIT_AUTO_CLONE=false  # Disable Git features - using direct mount
      - KB_MCP_ENABLED=true
      - KB_MODE=local
      - KB_MULTI_USER_ENABLED=false
      - KB_SEMANTIC_SEARCH_ENABLED=true  # Now using ChromaDB directly (no ARM hang)
    ports:
      - "8005:8000"  # Different port to avoid conflict with kb-service
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.kb.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits
    mem_limit: 512m
    cpus: 1.0

  # Web Service (FastHTML UI)
  web-service:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8080:8000"  # Web UI on port 8080
    volumes:
      - ./app:/app/app
      - ./certs:/app/certs:ro
    env_file:
      - .env
    environment:
      - GATEWAY_URL=http://gateway:8000
      - NATS_URL=nats://nats:4222
      - WEB_SESSION_SECRET=${SESSION_SECRET:-change-this-in-production}
      - WEB_LOG_LEVEL=INFO
      - WEB_DEBUG=true
      - ENVIRONMENT=local
      - WEB_SERVICE_BASE_URL=http://localhost:8080
      - TLS_CERT_PATH=/app/certs/web-service/cert.pem
      - TLS_KEY_PATH=/app/certs/web-service/key.pem
      - TLS_CA_PATH=/app/certs/ca.pem
      - JWT_PRIVATE_KEY_PATH=/app/certs/jwt-signing.key
      - JWT_PUBLIC_KEY_PATH=/app/certs/jwt-signing.pub
    depends_on:
      - gateway
      - nats
    networks:
      - gaia_net
    command: uvicorn app.services.web.main:app --host 0.0.0.0 --port 8000 --reload
    # Local development resource limits - lightweight UI
    mem_limit: 128m
    cpus: 0.5

  # PostgreSQL Database (with Gaia Platform schema + pgvector)
  db:
    image: pgvector/pgvector:pg15  # Includes pgvector extension for semantic search
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-local-database.sql:/docker-entrypoint-initdb.d/init-gaia.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=llm_platform
    ports:
      - "5432:5432"
    networks:
      - gaia_net
    # Local development resource limits - database needs headroom
    mem_limit: 1g
    cpus: 1.0

  # NATS Message Broker
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    networks:
      - gaia_net
    command: ["--jetstream", "--http_port", "8222"]
    # Local development resource limits
    mem_limit: 128m
    cpus: 0.5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gaia_net
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    # Local development resource limits
    mem_limit: 256m
    cpus: 0.5

  # Test service (equivalent to LLM Platform test)
  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
      - mcp_data:/app/data/kb
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/llm_platform}
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - MCP_FILESYSTEM_ROOT=/app/data
      - GATEWAY_URL=http://gateway:8000
    depends_on:
      - db
      - nats
      - redis
      - gateway
    networks:
      - gaia_net
    command: bash -c "PYTHONPATH=/app pytest -v"

volumes:
  postgres_data:
  redis_data:
  mcp_data:
    driver: local

networks:
  gaia_net:
    driver: bridge
