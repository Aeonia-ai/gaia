version: '3.8'

services:
  # FastAPI Gateway - Main entry point for all client requests
  gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    ports:
      - "8666:8000"  # Same port as LLM Platform for client compatibility
    volumes:
      - ./app:/app/app
      - mcp_data:/app/data/kb
      - ../Dendron:/app/data/wiki
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8000
      - ASSET_SERVICE_URL=http://asset-service:8000
      - CHAT_SERVICE_URL=http://chat-service:8000
      - KB_SERVICE_URL=http://kb-service:8000
    depends_on:
      - db
      - nats
      - redis
      - auth-service
      - asset-service
      - chat-service
      - kb-service
    networks:
      - gaia_net
    command: uvicorn app.gateway.main:app --host 0.0.0.0 --port 8000 --reload

  # Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.auth.main:app --host 0.0.0.0 --port 8000 --reload

  # Asset Service (Universal Asset Server)
  asset-service:
    build:
      context: .
      dockerfile: Dockerfile.asset
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.asset.main:app --host 0.0.0.0 --port 8000 --reload

  # Chat Service (MCP-Agent powered with KB integration)
  chat-service:
    build:
      context: .
      dockerfile: Dockerfile.chat
    volumes:
      - ./app:/app/app
      - mcp_data:/app/data/kb
      # Mount Knowledge Base for KB-enhanced multiagent capabilities
      - ${KB_PATH:-/Users/jasonasbahr/Development/Aeonia/Vaults/KB}:/kb:ro
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - MCP_FILESYSTEM_ROOT=/app/data
      # KB configuration
      - KB_PATH=/kb
      - KB_MCP_ENABLED=true
      - KB_MODE=local
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.chat.main:app --host 0.0.0.0 --port 8000 --reload

  # KB Service (Knowledge Base integration)
  kb-service:
    build:
      context: .
      dockerfile: Dockerfile.kb
    volumes:
      - ./app:/app/app
      # NO local KB mount - container-only storage for local-remote parity
      # KB will clone from Git on every start, just like production
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      # KB configuration
      - KB_PATH=/kb
      - KB_MCP_ENABLED=true
      - KB_MODE=local
    depends_on:
      - db
      - nats
      - redis
    networks:
      - gaia_net
    command: uvicorn app.services.kb.main:app --host 0.0.0.0 --port 8000 --reload

  # Web Service (FastHTML UI)
  web-service:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8080:8000"  # Web UI on port 8080
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    environment:
      - GATEWAY_URL=http://gateway:8000
      - NATS_URL=nats://nats:4222
      - WEB_SESSION_SECRET=${SESSION_SECRET:-change-this-in-production}
      - WEB_LOG_LEVEL=INFO
      - WEB_DEBUG=true
      - ENVIRONMENT=local
      - WEB_SERVICE_BASE_URL=http://localhost:8080
    depends_on:
      - gateway
      - nats
    networks:
      - gaia_net
    command: uvicorn app.services.web.main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database (with Gaia Platform schema)
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-local-database.sql:/docker-entrypoint-initdb.d/init-gaia.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=llm_platform
    ports:
      - "5432:5432"
    networks:
      - gaia_net

  # NATS Message Broker
  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
    networks:
      - gaia_net
    command: ["--jetstream", "--http_port", "8222"]

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gaia_net
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}

  # Test service (equivalent to LLM Platform test)
  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - ./tests:/app/tests
      - mcp_data:/app/data/kb
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/llm_platform
      - NATS_URL=nats://nats:4222
      - REDIS_URL=redis://redis:6379
      - API_KEY=FJUeDkZRy0uPp7cYtavMsIfwi7weF9-RT7BeOlusqnE
      - MCP_FILESYSTEM_ROOT=/app/data
      - GATEWAY_URL=http://gateway:8000
    depends_on:
      - db
      - nats
      - redis
      - gateway
    networks:
      - gaia_net
    command: bash -c "PYTHONPATH=/app pytest -v"

volumes:
  postgres_data:
  redis_data:
  mcp_data:
    driver: local

networks:
  gaia_net:
    driver: bridge
